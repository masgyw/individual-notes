# 定义Nginx运行的用户和用户组
#user  nobody;
# 工作进程数 auto:根据cpu数动态分配
worker_processes auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# 进程pid文件
pid        logs/nginx.pid;

events {
	# 单个进程最大连接数（最大连接数=连接数*进程数）
    worker_connections  1024;
}

# http 服务反向代理
http {
	# 文件扩展名与文件类型映射表
    include       mime.types;
	# 默认文件类型
    default_type  application/octet-stream;

    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
		'"$request" $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';
	access_log   logs/access.log  main;

	# 开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件
    sendfile        on;
	# 此选项允许或禁止使用socke的TCP_CORK的选项，仅在使用sendfile的时候使用
    #tcp_nopush     on;

    # 长连接超时时间，单位是秒
    keepalive_timeout  10;

    #gzip模块设置
    #gzip on; #开启gzip压缩输出
    #gzip_min_length 1k;    #最小压缩文件大小
    #gzip_buffers 4 16k;    #压缩缓冲区
    #gzip_http_version 1.0;    #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    #gzip_comp_level 2;    #压缩等级
    #gzip_types text/plain application/x-javascript text/css application/xml;    #压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。
    #gzip_vary on;
	
	# proxy 模块设置
	proxy_redirect          off;
	proxy_set_header        Host            $host;
	proxy_set_header        X-Real-IP       $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	client_max_body_size    10m;
	client_body_buffer_size 128k;
	proxy_connect_timeout   90;
	proxy_send_timeout      90;
	proxy_read_timeout      90;
	proxy_buffers           32 4k;
	
	#负载均衡配置
	#nginx的upstream目前支持4种方式的分配
	#1、轮询（默认）每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除
	#2、weight 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况
	#3、ip_hash 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题
	#4、fair 按后端服务器的响应时间来分配请求，响应时间短的优先分配
	#5、url_hash（第三方）按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效
	# 不可使用下划线
	upstream tomcat-servers {
		# weight是权重
		# ip_hash;
		server 127.0.0.1:8081;
		server 127.0.0.1:8082;
		# fair;
		
		#每个设备的状态设置为:
		#1.down表示单前的server暂时不参与负载
		#2.weight为weight越大，负载的权重就越大。
		#3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误
		#4.fail_timeout:max_fails次失败后，暂停的时间s。
		#5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。
	}

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
			#允许客户端请求的最大单文件字节数
            client_max_body_size 10m;
			#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass	http://tomcat-servers;
        }

		# CDN serve static files
		#location ~ ^/(images|javascript|js|css)/  {
		#  root    cdn;
		#  expires 30d;
		#}
		
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
	
	# other server ...

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
